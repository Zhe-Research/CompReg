% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GIC.R
\name{get.GIC}
\alias{get.GIC}
\title{GIC criterion selection for FuncompCGL}
\usage{
get.GIC(p, df_list, GIC_obj, GIC_arg, cut_type = c("Strict", "Matrix",
  "Curve"), lower_tri = 0.01, GIC_type = c("GIC1", "GIC2", "GIC3", "GIC4",
  "AIC", "BIC"), method_type = c("cgl", "naive", "base"), y = NULL,
  Zc = NULL, refit = FALSE)
}
\arguments{
\item{p}{number of compositional predictors}

\item{df_list}{vector of df's used in \code{GIC_obj}}

\item{GIC_obj}{an object of \code{\link{GIC.FuncompCGL}}}

\item{GIC_arg}{argument list used to fit \code{\link{GIC.FuncompCGL}},
need to at least provide information for basis generation,
including \code{basis_fun}, \code{degree} and \code{sseq}.}

\item{cut_type}{cut method for none zero group - default value is \code{Strict} which
is no cut-off. Other two methods are \code{Matrix} and \code{Curve}.
See details.}

\item{lower_tri}{lower percentage boundary used in cut none zero groups.}

\item{GIC_type}{variations of GIC's, AIC and BIC. See details.}

\item{method_type}{mehod used to fitted \code{\link{GIC.FuncompCGL}} \cr
\code{cgl} - constrained group lasso \cr
\code{base} - log contract group lasso \cr
\code{naive} - do not consider the fact of compositional.}

\item{y, Zc}{when \code{refit=TRUE}, need to privde \code{y} and \code{Zc} to re-calcualte
likelihood.}

\item{refit}{logical, whehter refit likelihood when small magnitude groups are cut to zeros'
Default value is \code{FALSE}.}
}
\value{
\item{beta}{selected beta vector.}
\item{k_opt}{selected \code{df}.}
\item{GIC_curve}{a \code{length(df_list)} by \code{nlam} matrix of GIC values}
\item{N_zero}{a matrix of numbers of none zero groups selected.}
}
\description{
Calculate GIC for GIC.FuncompCGL, select beta coefficients vector and df via
BIC, AIC, GIC criterion
}
\details{
$$GIC(\eqn{\lambda}) = log(MSE) + Selection * \code{alpha}$$, for normal error.
If include linear constraints, like in log contract and constraints group lasso model,
selection = None zero group - 1; otherwise in naive method without consideration of
linear constraints, selection = None zero group. \cr

alpha_GIC1 = log(max(p*df, n)) * df / n \cr
alpha_GIC2 = log(max(p*df, n)) * df * log(log(n)) / n \cr
alpha_GIC3 = log(p*df) *df /n \cr
alpha_GIC4 = log(p*df) * df * log(log(n)) / n \cr
alpha_BIC = log(n) * df / n \cr
alpha_AIC = 2 * df / n.

\code{cut_off = 'Curve'}, calculate L2 function norm for curves for each compositional covariates
, across \code{df} and \code{lambda}. Consider those betas' with L2 curve norm smaller than
sum(L2_j)*lower_tri as none-selected. \cr

\code{cut_off = 'Matrix'} calculate L2 norm for coefficient matrix by rows, across
 \code{df} and \code{lambda}, condiser these betas' with vector L2 norm that is smaller than
 srqt(sum(L2_j^2)) * lower_tri.

 \code{cut_off = 'Strict'}, strict none zero group, whenever there is none zero entries considered
 as selected.
}
